#:kivy 1.0
# Define login screen
# Each item in <> is a rool
# class LoginScreen(Screen)
<LoginScreen>:
    GridLayout:
        cols: 1 # Need to have cols specified or gridlayout will place all items in one location
        GridLayout:
            cols: 1 
            # Padding is the distence of a grid side from edge of display/window
            # First number is top and bottom of the grid border -> horizontal
            # Second number is left and right padding -> vertical
            padding: 15, 15
            # Spacing is the distance b
            # First is spacing left and right -> horizontal
            # Second number is spacing up and down -> vertical
            spacing: 20, 20
            Label:
                text: "User Login"
                font_size: "20sp"
            TextInput:
                id: userName
                hint_text: "User Name"
            TextInput:
                id: passWord
                hint_text: "Password"
                password: True
            RelativeLayout:
                Button:
                    text: "Login"
                    size_hint: 0.3, 0.7
                    pos_hint: {'center_x' : 0.5, 'center_y' : 0.6}
                    on_press: root.login(root.ids.userName.text, root.ids.passWord.text)
                    #""" When using the on_press, the function needs to start with root.{function name}"""
            Label:
                id: loginFailed
                text: ""
        GridLayout:
            cols: 2 # Default is 1 column
            size_hint: 0.2, 0.2
            padding: 10, 10
            spacing: 10, 0
            Button:
                text: "Forgot Password"
                # R, G, B, Transperancy
                background_color: 1, 1, 1, 0
                opacity: 1 if self.state == 'normal' else 0.5
                color: 0.1, 0.7, 1, 1
                on_press: root.forgot()
            Button:
                text: "Sign Up"
                background_color: 1, 1, 1, 0
                opacity: 1 if self.state == 'normal' else 0.5
                color: 1, 0.5, 0.5, 1
                on_press: root.sign_up() # calls function on press
                # the root above is the <LoginScreen>
# Specify main screen --> is the ScreenManager
# class RootWidget(ScreenManager)
<SignupScreen>:
    GridLayout:
        cols: 1
        padding: 15, 15
        spacing: 20, 30
        RelativeLayout:    
            Button:
                text: '<Login'
                on_press: root.go_back()
                size_hint: 0.2, 0.7
                background_color: 1, 1, 1, 0
                color: 1, 0, 0, 1
                pos_hint: {'center_x' : 0.1, 'center_y' : 0.01}
        Label:
            text: "Sign up to feel better"
        TextInput:
            hint_text: "New Username"
            id: newUserName
        TextInput:
            hint_text: "New Password"
            id: newPassword
        Button:
            text: "Sign Up"
            on_press: root.add_user(root.ids.newUserName.text, root.ids.newPassword.text)
            size_hint: 0.5, 0.5
            pos_hint: {'center_x' : 0.5, 'center_y' : 0.5}

<SignupScreenSuccess>:
    GridLayout:
        cols: 1
        padding: 15, 15
        spacing: 20, 20
        Label:
            text: "Sign up Successful"
            font_size: '27sp'
        Button:
            text: "Done"
            on_press: root.back()
            size_hint: 0.3, 0.7
            pos_hint: {'center_x' : 0.5, 'center_y' : 0.6}


<LoginScreenSuccess>:
    GridLayout:
        cols: 1
        padding: 15, 15
        spacing: 20, 20
        RelativeLayout:    
            ImageButton:
                on_press: root.logout()
                source: 'images\logout_hover.png' if self.hovered else 'images\logout_nothover.png'
                size_hint: 0.3, 0.3
                pos_hint: {'center_x' : 0.9, 'center_y' : 0.8}
        Label:
            text: "How do you feel?"
        TextInput:
            id: userFeel
            hint_text: "Enter an emotion: happy, sad, unloved .."
        Button:
            text: "I feel"
            on_press: root.get_quote(root.ids.userFeel.text)
            size_hint: 0.3, 0.3
            pos_hint: {'center_x' : 0.9, 'center_y' : 0.8}
        # To be able to scroll through the label text without affecting the rest of the elements
        ScrollView:    
            Label:
                id: toInspire
                text: ""
                # To allow for dynamic resizing of the text
                # if self.width, self.height -> will resize but still be constrained by the label size (will cut off text if cannot fit)
                # if self.width, None -> will ignore the bound of the label and print all (can overlap other elements)
                text_size: self.width, None
                # To ignore the heightbound
                size_hint_y: None
                # To get a dynamic heioght of the label, not the text
                # texture_size[0] -> is width size
                # texture_size[1] -> is height size
                height: self.texture_size[1]

<ForgotPasswordScreen>:
    GridLayout:
        cols: 1
        padding: 20, 20
        spacing: 20, 20
        Label:
            text: 'Enter your user name'
        TextInput:
            id: userNameForPass
            hint_text: "User Name"
        TextInput:
            id: new_password1
            text_hint: "New Password"
        TextInput:
            id: new_password2
            text_hint: "Repeat New Password"
        Label:
            id: password_status
            text: ''
        GridLayout:
            cols: 2
            padding: 20
            spacing: 1
            Button:
                text: "Reset Password"
                on_press: root.change_password(root.ids.userNameForPass.text, root.ids.new_password1.text, root.ids.new_password2.text)
            Button:
                text: "Go To Sign Up"
                on_press: root.moveto_sighnup()

<RootWidget>:
    LoginScreen:
        name: "login_screen"
    SignupScreen:
        name: "signup_screen"
    SignupScreenSuccess:
        name: "signup_screen_success"
    LoginScreenSuccess:
        name: "login_screen_success"
    ForgotPasswordScreen:
        name: 'forgot_password'


 
