Deploying to heroku:

1) Need to install Git and install heroku toolbelt to allow for terminal controls

2) Navigate to the folder containing the website and virtual enviornment

3) Script: heroku login --> to log into the service

4) heroku create {app_name} --> To create an app on the service and get your own unique url ({app_name}.herokuapp.com)

5) Navigate to the virtual instalation of python Scripts in your project (ex. virtual/Scripts) and 
    install gunicorn (pip install gunicorn) --> It's needed so the server can run the web application

6) Need to create specific files in the project folder for heroku to be able to excecute the script

    1) requirements.txt --> List of dependencies that are needed for the website to work, so that heroku can install it 
        automaticaly
        - Pipe into a file --> ../virtual(or whatever the virtual enviornemnt is called)/Scripts/pip freeze > requirements.txt

    2) Procfile --> Telling what web server to user to run the app
        - cannot have extension (ex. .txt)
        - file should contain the following:
            web: gunicorn {name of main script}:{name of the variable that holds the Flask(__name__) object}
            ex. ==> web: gunicorn index:app

    3) runtime.txt --> you specify which version of python should be ran on the server
        - python-3.9.0

7) call git init in the webapp folder to init git and create a .git folder
    - git init

8) Need to upload all of the project files and folders to git:
    1. git add .  --> will add all items in current folder to commit
    2. git commit -m "{Commit message}" --> to stage the changes
    3. heroku git:remote --app {app name on server}
        - heroku git:remote --app rexaevum
    4. git push heroku master --> to push to heroku
        If error: might need to sign into git using
            1) git config --global user.email "{email used to create the hiroku account}"
                - git config --global user.email "rolans2k@gmail.com"
            2) git config --global user.name "{user_name you want}"
                - git config --global user.name "rexaevum"

9) If there are any issues, try runing heroku logs to get a detailed description of what happened
    - heroku logs
------------------------------------------------------------------------------------------------------
Updating the info on the server:

Connect to the heroku service/repo
    1) Log into heroku: heroku login
    2) heroku info --> checkto make sure the app is visable
    3) heroku git:remote --app rexaevum

Then do: add, commit and push
    1) git add .
    2) git commit -m "{Note}"
    3) git push heroku master