Tech used:
- virtualenv
+ script to install: pip install virtualenv

!!! Need to create a virtual enviornment before you start developing the website using a fresh copy of python !!!

To create a virtual enviornment:

1) create a super-folder for the folder containing the website
    - the virtual enviornment needs to be at the same level/depth as the website folder

2) Navigate to the folder the contains the website folder

3) Run script: "python -m venv {x}"
    - where x == folder name for virtual enviornment folder

4) Once the enviornment is set up, include the filepath "x/Scripts/" then run the script you need
    - ex --> virtual/Scripts/
    - where x == folder name for virtual enviornment folder

5) First need to install the remote libraries, just like you would on your own computer
    - ex the library used to set up the website --> PS..> virtual/Scripts/pip install flask

6) After that run the python script that serves as the main of your website with the corect folder name as the file path
    - ex --> virtual/Scripts/python Basic_personal_website/index.py


Deploying to heroku:

1) Need to install Git and install heroku toolbelt to allow for terminal controls

2) Navigate to the folder containing the website and virtual enviornment

3) Script: heroku login --> to log into the service

4) heroku create {app_name} --> To create an app on the service and get your own unique url ({app_name}.herokuapp.com)

5) Navigate to the virtual instalation of python Scripts in your project (ex. virtual/Scripts) and 
    install gunicorn (pip install gunicorn) --> It's needed so the server can run the web application

6) Need to create specific files in the project folder for heroku to be able to excecute the script

    1) requirements.txt --> List of dependencies that are needed for the website to work, so that heroku can install it 
        automaticaly
        - Pipe into a file --> ../virtual(or whatever the virtual enviornemnt is called)/Scripts/pip freeze > requirements.txt

    2) Procfile --> Telling what web server to user to run the app
        - cannot have extension (ex. .txt)
        - file should contain the following:
            web: gunicorn {name of main script}:{name of the variable that holds the Flask(__name__) object}
            ex. ==> web: gunicorn index:app

    3) runtime.txt --> you specify which version of python should be ran on the server
        - python-3.9.0

7) call git init in the webapp folder to init git and create a .git folder
    - git init

8) Need to upload all of the project files and folders to git:
    1. git add .  --> will add all items in current folder to commit
    2. git commit -m "{Commit message}" --> to stage the changes
    3. heroku git:remote --app {app name on server}
        - heroku git:remote --app rexaevum
    4. git push heroku master --> to push to heroku
        If error: might need to sign into git using
            1) git config --global user.email "{email used to create the hiroku account}"
                - git config --global user.email "rolans2k@gmail.com"
            2) git config --global user.name "{user_name you want}"
                - git config --global user.name "rexaevum"