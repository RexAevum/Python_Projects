# main way to reduce errors is to use a try/except in those cases where you can predict an error happening due to user input or
# in the cases where a query or connection is likely to return an error without causing the whole program to crash

def div(x, y):
    try:
        return x/y
    except: # This will catch any error that is generated by try section
        return "Cannot divide with 0"

print(div(1, "a")) #Type error
print(div(1, 0)) # Zero division

# Usually it is better to be specific with the except section which errors it will try to catch
# if you leave the except: you could end up missing some errors that occure in the try section 
def division(x, y):
    try:
        return x/y
    except ZeroDivisionError: # will only catch the specified error, that way any other errors will still crash the app
        return "Cannot divide with 0"

print(div(1, "a")) #Type error
print(div(1, 0)) # Zero division